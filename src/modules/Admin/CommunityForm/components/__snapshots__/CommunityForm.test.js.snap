// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Community form should display successfull submission screen 1`] = `
<StandardPage
  title="Add a missing community"
>
  <ConfirmDiscardFormChanges
    dirty={true}
    submitSucceeded={true}
  >
    <form>
      <NavigationDialogBox
        when={false}
      />
      <ForwardRef(Grid)
        container={true}
        spacing={3}
      >
        <ForwardRef(Grid)
          item={true}
          xs={12}
        >
          <ForwardRef(Grid)
            item={true}
            xs={12}
          >
            <StandardCard
              help={Object {}}
              title="Community details"
            >
              <ForwardRef(Grid)
                container={true}
                spacing={3}
              >
                <ForwardRef(Grid)
                  item={true}
                  xs={12}
                >
                  <Field
                    autoFocus={true}
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "FormHelperTextProps": [Function],
                          "InputLabelProps": [Function],
                          "InputProps": [Function],
                          "SelectProps": [Function],
                          "autoComplete": [Function],
                          "autoFocus": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "color": [Function],
                          "defaultValue": [Function],
                          "disabled": [Function],
                          "error": [Function],
                          "fullWidth": [Function],
                          "help": [Function],
                          "helperText": [Function],
                          "id": [Function],
                          "inputProps": [Function],
                          "inputRef": [Function],
                          "label": [Function],
                          "margin": [Function],
                          "maxRows": [Function],
                          "minRows": [Function],
                          "multiline": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "placeholder": [Function],
                          "required": [Function],
                          "rows": [Function],
                          "select": [Function],
                          "size": [Function],
                          "sx": [Function],
                          "textFieldId": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    fullWidth={true}
                    label="Title of community"
                    name="rek_title"
                    placeholder="Type a title for this community"
                    required={true}
                    textFieldId="rek-title"
                    type="text"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  item={true}
                  xs={12}
                >
                  <Field
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "FormHelperTextProps": [Function],
                          "InputLabelProps": [Function],
                          "InputProps": [Function],
                          "SelectProps": [Function],
                          "autoComplete": [Function],
                          "autoFocus": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "color": [Function],
                          "defaultValue": [Function],
                          "disabled": [Function],
                          "error": [Function],
                          "fullWidth": [Function],
                          "help": [Function],
                          "helperText": [Function],
                          "id": [Function],
                          "inputProps": [Function],
                          "inputRef": [Function],
                          "label": [Function],
                          "margin": [Function],
                          "maxRows": [Function],
                          "minRows": [Function],
                          "multiline": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "placeholder": [Function],
                          "required": [Function],
                          "rows": [Function],
                          "select": [Function],
                          "size": [Function],
                          "sx": [Function],
                          "textFieldId": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    fullWidth={true}
                    label="Community description"
                    multiline={true}
                    name="rek_description"
                    placeholder="Type a description of this community."
                    required={true}
                    rows={5}
                    textFieldId="rek-description"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Typography)>
                    Add up to 10 individual keywords, or a pipe separated list, that describe the content of the thesis. (eg. one|two|three)
                  </ForwardRef(Typography)>
                  <Field
                    ListEditorForm={
                      Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": [Function],
                      }
                    }
                    component={
                      Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": [Function],
                      }
                    }
                    disabled={false}
                    listEditorId="rek-keywords"
                    locale={
                      Object {
                        "form": Object {
                          "locale": Object {
                            "addButtonLabel": "Add",
                            "id": "keywords-input",
                            "inputFieldHint": "Type keywords",
                            "inputFieldLabel": "Keywords",
                          },
                        },
                        "header": Object {
                          "locale": Object {
                            "deleteAll": "Remove all keywords",
                            "deleteAllConfirmation": Object {
                              "cancelButtonLabel": "No",
                              "confirmButtonLabel": "Yes",
                              "confirmationMessage": "Are you sure you want to delete all keywords?",
                              "confirmationTitle": "Delete all",
                            },
                            "nameColumn": "Keyword",
                            "reorderColumn": "Reorder keywords",
                          },
                        },
                        "row": Object {
                          "locale": Object {
                            "deleteHint": "Remove this keyword",
                            "deleteRecordConfirmation": Object {
                              "cancelButtonLabel": "No",
                              "confirmButtonLabel": "Yes",
                              "confirmationMessage": "Are you sure you want to delete this keyword?",
                              "confirmationTitle": "Delete keyword",
                            },
                            "moveDownHint": "Move keyword down the order",
                            "moveUpHint": "Move keyword up the order",
                          },
                        },
                      }
                    }
                    maxCount={10}
                    name="fez_record_search_key_keywords"
                    searchKey={
                      Object {
                        "order": "rek_keywords_order",
                        "value": "rek_keywords",
                      }
                    }
                  />
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Typography)>
                    Internal Notes (admin)
                  </ForwardRef(Typography)>
                  <Field
                    component={[Function]}
                    disabled={false}
                    fullWidth={true}
                    label="Internal Notes (admin)"
                    multiline={true}
                    name="internalNotes"
                    placeholder="Optionally enter internal notes"
                    richEditorId="internalNotes"
                    rows={5}
                  />
                </ForwardRef(Grid)>
              </ForwardRef(Grid)>
            </StandardCard>
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            xs={12}
          >
            <Alert
              allowDismiss={false}
              customIcon={null}
              customType={null}
              disableAlertClick={false}
              dismissTitle="Click to dismiss this alert"
              message="New work has been saved successfully."
              showLoader={false}
              title="Success"
              type="done"
              wiggle={null}
            />
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
        <ForwardRef(Grid)
          container={true}
          spacing={2}
        >
          <ForwardRef(Grid)
            item={true}
            sm={true}
            xs={false}
          />
          <ForwardRef(Grid)
            item={true}
            sm="auto"
            xs={12}
          >
            <ForwardRef(Button)
              data-analyticsid="cancel-community"
              data-testid="cancel-community"
              disabled={false}
              fullWidth={true}
              onClick={[Function]}
              variant="contained"
            >
              Cancel and return to the homepage
            </ForwardRef(Button)>
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm="auto"
            xs={12}
          >
            <ForwardRef(Button)
              color="primary"
              data-analyticsid="submit-community"
              data-testid="submit-community"
              fullWidth={true}
              onClick={[MockFunction]}
              variant="contained"
            >
              Add community
            </ForwardRef(Button)>
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
    </form>
  </ConfirmDiscardFormChanges>
</StandardPage>
`;

exports[`Community form should render form 1`] = `
<StandardPage
  title="Add a missing community"
>
  <ConfirmDiscardFormChanges
    dirty={true}
    submitSucceeded={false}
  >
    <form>
      <NavigationDialogBox
        when={true}
      />
      <ForwardRef(Grid)
        container={true}
        spacing={3}
      >
        <ForwardRef(Grid)
          item={true}
          xs={12}
        >
          <ForwardRef(Grid)
            item={true}
            xs={12}
          >
            <StandardCard
              help={Object {}}
              title="Community details"
            >
              <ForwardRef(Grid)
                container={true}
                spacing={3}
              >
                <ForwardRef(Grid)
                  item={true}
                  xs={12}
                >
                  <Field
                    autoFocus={true}
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "FormHelperTextProps": [Function],
                          "InputLabelProps": [Function],
                          "InputProps": [Function],
                          "SelectProps": [Function],
                          "autoComplete": [Function],
                          "autoFocus": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "color": [Function],
                          "defaultValue": [Function],
                          "disabled": [Function],
                          "error": [Function],
                          "fullWidth": [Function],
                          "help": [Function],
                          "helperText": [Function],
                          "id": [Function],
                          "inputProps": [Function],
                          "inputRef": [Function],
                          "label": [Function],
                          "margin": [Function],
                          "maxRows": [Function],
                          "minRows": [Function],
                          "multiline": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "placeholder": [Function],
                          "required": [Function],
                          "rows": [Function],
                          "select": [Function],
                          "size": [Function],
                          "sx": [Function],
                          "textFieldId": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    fullWidth={true}
                    label="Title of community"
                    name="rek_title"
                    placeholder="Type a title for this community"
                    required={true}
                    textFieldId="rek-title"
                    type="text"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  item={true}
                  xs={12}
                >
                  <Field
                    component={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "FormHelperTextProps": [Function],
                          "InputLabelProps": [Function],
                          "InputProps": [Function],
                          "SelectProps": [Function],
                          "autoComplete": [Function],
                          "autoFocus": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "color": [Function],
                          "defaultValue": [Function],
                          "disabled": [Function],
                          "error": [Function],
                          "fullWidth": [Function],
                          "help": [Function],
                          "helperText": [Function],
                          "id": [Function],
                          "inputProps": [Function],
                          "inputRef": [Function],
                          "label": [Function],
                          "margin": [Function],
                          "maxRows": [Function],
                          "minRows": [Function],
                          "multiline": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "placeholder": [Function],
                          "required": [Function],
                          "rows": [Function],
                          "select": [Function],
                          "size": [Function],
                          "sx": [Function],
                          "textFieldId": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    disabled={false}
                    fullWidth={true}
                    label="Community description"
                    multiline={true}
                    name="rek_description"
                    placeholder="Type a description of this community."
                    required={true}
                    rows={5}
                    textFieldId="rek-description"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Typography)>
                    Add up to 10 individual keywords, or a pipe separated list, that describe the content of the thesis. (eg. one|two|three)
                  </ForwardRef(Typography)>
                  <Field
                    ListEditorForm={
                      Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": [Function],
                      }
                    }
                    component={
                      Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "type": [Function],
                      }
                    }
                    disabled={false}
                    listEditorId="rek-keywords"
                    locale={
                      Object {
                        "form": Object {
                          "locale": Object {
                            "addButtonLabel": "Add",
                            "id": "keywords-input",
                            "inputFieldHint": "Type keywords",
                            "inputFieldLabel": "Keywords",
                          },
                        },
                        "header": Object {
                          "locale": Object {
                            "deleteAll": "Remove all keywords",
                            "deleteAllConfirmation": Object {
                              "cancelButtonLabel": "No",
                              "confirmButtonLabel": "Yes",
                              "confirmationMessage": "Are you sure you want to delete all keywords?",
                              "confirmationTitle": "Delete all",
                            },
                            "nameColumn": "Keyword",
                            "reorderColumn": "Reorder keywords",
                          },
                        },
                        "row": Object {
                          "locale": Object {
                            "deleteHint": "Remove this keyword",
                            "deleteRecordConfirmation": Object {
                              "cancelButtonLabel": "No",
                              "confirmButtonLabel": "Yes",
                              "confirmationMessage": "Are you sure you want to delete this keyword?",
                              "confirmationTitle": "Delete keyword",
                            },
                            "moveDownHint": "Move keyword down the order",
                            "moveUpHint": "Move keyword up the order",
                          },
                        },
                      }
                    }
                    maxCount={10}
                    name="fez_record_search_key_keywords"
                    searchKey={
                      Object {
                        "order": "rek_keywords_order",
                        "value": "rek_keywords",
                      }
                    }
                  />
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Typography)>
                    Internal Notes (admin)
                  </ForwardRef(Typography)>
                  <Field
                    component={[Function]}
                    disabled={false}
                    fullWidth={true}
                    label="Internal Notes (admin)"
                    multiline={true}
                    name="internalNotes"
                    placeholder="Optionally enter internal notes"
                    richEditorId="internalNotes"
                    rows={5}
                  />
                </ForwardRef(Grid)>
              </ForwardRef(Grid)>
            </StandardCard>
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
        <ForwardRef(Grid)
          container={true}
          spacing={2}
        >
          <ForwardRef(Grid)
            item={true}
            sm={true}
            xs={false}
          />
          <ForwardRef(Grid)
            item={true}
            sm="auto"
            xs={12}
          >
            <ForwardRef(Button)
              data-analyticsid="cancel-community"
              data-testid="cancel-community"
              disabled={false}
              fullWidth={true}
              onClick={[Function]}
              variant="contained"
            >
              Cancel and return to the homepage
            </ForwardRef(Button)>
          </ForwardRef(Grid)>
          <ForwardRef(Grid)
            item={true}
            sm="auto"
            xs={12}
          >
            <ForwardRef(Button)
              color="primary"
              data-analyticsid="submit-community"
              data-testid="submit-community"
              fullWidth={true}
              onClick={[MockFunction]}
              variant="contained"
            >
              Add community
            </ForwardRef(Button)>
          </ForwardRef(Grid)>
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
    </form>
  </ConfirmDiscardFormChanges>
</StandardPage>
`;

exports[`Community form should render success panel 1`] = `
<StandardPage
  title="Add a missing community"
>
  <ForwardRef(Grid)
    container={true}
    spacing={3}
  >
    <ForwardRef(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        title="Community added successfully"
      >
        <ForwardRef(Typography)>
          Your new community was created successfully.
        </ForwardRef(Typography)>
      </StandardCard>
    </ForwardRef(Grid)>
  </ForwardRef(Grid)>
  <ForwardRef(Grid)
    container={true}
    spacing={2}
  >
    <ForwardRef(Grid)
      item={true}
      xs={true}
    />
    <ForwardRef(Grid)
      item={true}
    >
      <ForwardRef(Button)
        fullWidth={true}
        onClick={[Function]}
        variant="contained"
      >
        Return to the homepage
      </ForwardRef(Button)>
    </ForwardRef(Grid)>
    <ForwardRef(Grid)
      item={true}
    >
      <ForwardRef(Button)
        color="primary"
        fullWidth={true}
        onClick={[Function]}
        variant="contained"
      >
        Add another community
      </ForwardRef(Button)>
    </ForwardRef(Grid)>
  </ForwardRef(Grid)>
</StandardPage>
`;
