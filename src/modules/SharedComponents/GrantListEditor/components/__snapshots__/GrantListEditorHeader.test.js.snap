// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GrantListEditorHeader should have a proper style generator 1`] = `
Object {
  "header": Object {
    "borderBottom": "1px solid rgba(0, 0, 0, 0.2)",
    "marginTop": 8,
    "padding": 0,
    "paddingBottom": 6,
  },
  "paddingRight14": Object {
    "paddingRight": 14,
  },
  "paddingRight24": Object {
    "paddingRight": 24,
  },
  "paddingRight36": Object {
    "paddingRight": 36,
  },
  "right": Object {
    "textAlign": "right",
  },
}
`;

exports[`GrantListEditorHeader should hide grant agency type input 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <WithStyles(ForwardRef(ListItem))
    classes={
      Object {
        "root": undefined,
      }
    }
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={0}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <WithStyles(ForwardRef(Grid))
          container={true}
          spacing={0}
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            sm={5}
            xs={12}
          >
            <WithStyles(ForwardRef(ListItemText))
              secondaryTypographyProps={
                Object {
                  "variant": "caption",
                }
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(ForwardRef(Grid))>
          <Hidden
            xsDown={true}
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              sm={3}
            >
              <WithStyles(ForwardRef(ListItemText))
                secondaryTypographyProps={
                  Object {
                    "variant": "caption",
                  }
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(ForwardRef(Grid))>
          </Hidden>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(ForwardRef(Grid))
            container={true}
            spacing={0}
          >
            <Hidden
              smDown={true}
            >
              <WithStyles(ForwardRef(Grid))
                item={true}
                xs={8}
              >
                <WithStyles(ForwardRef(ListItemText))
                  classes={
                    Object {
                      "root": undefined,
                    }
                  }
                  secondaryTypographyProps={
                    Object {
                      "variant": "caption",
                    }
                  }
                  style={
                    Object {
                      "padding": 0,
                    }
                  }
                />
              </WithStyles(ForwardRef(Grid))>
            </Hidden>
            <WithStyles(ForwardRef(Grid))
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <WithStyles(ForwardRef(Tooltip))
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(ForwardRef(IconButton))
                    disabled={false}
                    onClick={[Function]}
                  >
                    <Memo(ForwardRef(DeleteForeverIcon)) />
                  </WithStyles(ForwardRef(IconButton))>
                </div>
              </WithStyles(ForwardRef(Tooltip))>
            </WithStyles(ForwardRef(Grid))>
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(ListItem))>
</Fragment>
`;

exports[`GrantListEditorHeader should render default mobile view 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <WithStyles(ForwardRef(ListItem))
    classes={
      Object {
        "root": undefined,
      }
    }
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={0}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <WithStyles(ForwardRef(Grid))
          container={true}
          spacing={0}
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            sm={5}
            xs={12}
          >
            <WithStyles(ForwardRef(ListItemText))
              secondaryTypographyProps={
                Object {
                  "variant": "caption",
                }
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(ForwardRef(Grid))>
          <Hidden
            xsDown={true}
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              sm={3}
            >
              <WithStyles(ForwardRef(ListItemText))
                secondaryTypographyProps={
                  Object {
                    "variant": "caption",
                  }
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              item={true}
              sm={4}
            >
              <WithStyles(ForwardRef(ListItemText))
                secondaryTypographyProps={
                  Object {
                    "variant": "caption",
                  }
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(ForwardRef(Grid))>
          </Hidden>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(ForwardRef(Grid))
            container={true}
            spacing={0}
          >
            <Hidden
              smDown={true}
            >
              <WithStyles(ForwardRef(Grid))
                item={true}
                xs={8}
              >
                <WithStyles(ForwardRef(ListItemText))
                  classes={
                    Object {
                      "root": undefined,
                    }
                  }
                  secondaryTypographyProps={
                    Object {
                      "variant": "caption",
                    }
                  }
                  style={
                    Object {
                      "padding": 0,
                    }
                  }
                />
              </WithStyles(ForwardRef(Grid))>
            </Hidden>
            <WithStyles(ForwardRef(Grid))
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={12}
            >
              <WithStyles(ForwardRef(Tooltip))
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(ForwardRef(IconButton))
                    disabled={false}
                    onClick={[Function]}
                  >
                    <Memo(ForwardRef(DeleteForeverIcon)) />
                  </WithStyles(ForwardRef(IconButton))>
                </div>
              </WithStyles(ForwardRef(Tooltip))>
            </WithStyles(ForwardRef(Grid))>
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(ListItem))>
</Fragment>
`;

exports[`GrantListEditorHeader should render default view 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <WithStyles(ForwardRef(ListItem))
    classes={
      Object {
        "root": undefined,
      }
    }
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={0}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <WithStyles(ForwardRef(Grid))
          container={true}
          spacing={0}
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            sm={5}
            xs={12}
          >
            <WithStyles(ForwardRef(ListItemText))
              secondaryTypographyProps={
                Object {
                  "variant": "caption",
                }
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(ForwardRef(Grid))>
          <Hidden
            xsDown={true}
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              sm={3}
            >
              <WithStyles(ForwardRef(ListItemText))
                secondaryTypographyProps={
                  Object {
                    "variant": "caption",
                  }
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              item={true}
              sm={4}
            >
              <WithStyles(ForwardRef(ListItemText))
                secondaryTypographyProps={
                  Object {
                    "variant": "caption",
                  }
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(ForwardRef(Grid))>
          </Hidden>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(ForwardRef(Grid))
            container={true}
            spacing={0}
          >
            <Hidden
              smDown={true}
            >
              <WithStyles(ForwardRef(Grid))
                item={true}
                xs={8}
              >
                <WithStyles(ForwardRef(ListItemText))
                  classes={
                    Object {
                      "root": undefined,
                    }
                  }
                  secondaryTypographyProps={
                    Object {
                      "variant": "caption",
                    }
                  }
                  style={
                    Object {
                      "padding": 0,
                    }
                  }
                />
              </WithStyles(ForwardRef(Grid))>
            </Hidden>
            <WithStyles(ForwardRef(Grid))
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <WithStyles(ForwardRef(Tooltip))
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(ForwardRef(IconButton))
                    disabled={false}
                    onClick={[Function]}
                  >
                    <Memo(ForwardRef(DeleteForeverIcon)) />
                  </WithStyles(ForwardRef(IconButton))>
                </div>
              </WithStyles(ForwardRef(Tooltip))>
            </WithStyles(ForwardRef(Grid))>
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(ListItem))>
</Fragment>
`;

exports[`GrantListEditorHeader should show confirmation box 1`] = `
<Fragment>
  <WithStyles(ConfirmDialogBox)
    onAction={[MockFunction]}
    onRef={[Function]}
  />
  <WithStyles(ForwardRef(ListItem))
    classes={
      Object {
        "root": undefined,
      }
    }
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      spacing={0}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={9}
        sm={11}
        xs={10}
      >
        <WithStyles(ForwardRef(Grid))
          container={true}
          spacing={0}
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            sm={5}
            xs={12}
          >
            <WithStyles(ForwardRef(ListItemText))
              secondaryTypographyProps={
                Object {
                  "variant": "caption",
                }
              }
              style={
                Object {
                  "padding": 0,
                }
              }
            />
          </WithStyles(ForwardRef(Grid))>
          <Hidden
            xsDown={true}
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              sm={3}
            >
              <WithStyles(ForwardRef(ListItemText))
                secondaryTypographyProps={
                  Object {
                    "variant": "caption",
                  }
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              item={true}
              sm={4}
            >
              <WithStyles(ForwardRef(ListItemText))
                secondaryTypographyProps={
                  Object {
                    "variant": "caption",
                  }
                }
                style={
                  Object {
                    "padding": 0,
                  }
                }
              />
            </WithStyles(ForwardRef(Grid))>
          </Hidden>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        md={3}
        sm={1}
        xs={2}
      >
        <WithStyles(ForwardRef(ListItemSecondaryAction))
          style={
            Object {
              "margin": "0 0 -32px 0",
              "position": "relative",
              "width": "100%",
            }
          }
        >
          <WithStyles(ForwardRef(Grid))
            container={true}
            spacing={0}
          >
            <Hidden
              smDown={true}
            >
              <WithStyles(ForwardRef(Grid))
                item={true}
                xs={8}
              >
                <WithStyles(ForwardRef(ListItemText))
                  classes={
                    Object {
                      "root": undefined,
                    }
                  }
                  secondaryTypographyProps={
                    Object {
                      "variant": "caption",
                    }
                  }
                  style={
                    Object {
                      "padding": 0,
                    }
                  }
                />
              </WithStyles(ForwardRef(Grid))>
            </Hidden>
            <WithStyles(ForwardRef(Grid))
              item={true}
              style={
                Object {
                  "textAlign": "right",
                }
              }
              xs={4}
            >
              <WithStyles(ForwardRef(Tooltip))
                disableFocusListener={false}
                disableHoverListener={false}
                disableTouchListener={false}
              >
                <div
                  style={
                    Object {
                      "display": "inline",
                    }
                  }
                >
                  <WithStyles(ForwardRef(IconButton))
                    disabled={false}
                    onClick={[Function]}
                  >
                    <Memo(ForwardRef(DeleteForeverIcon)) />
                  </WithStyles(ForwardRef(IconButton))>
                </div>
              </WithStyles(ForwardRef(Tooltip))>
            </WithStyles(ForwardRef(Grid))>
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(ListItemSecondaryAction))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(ListItem))>
</Fragment>
`;
