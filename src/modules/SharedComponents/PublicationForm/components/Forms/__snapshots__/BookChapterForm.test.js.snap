// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BookChapterForm renders  component 1`] = `
<WithStyles(ForwardRef(Grid))
  container={true}
  spacing={3}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Book chapter information"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            autoFocus={true}
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Book chapter title"
            multiline={true}
            name="rek_title"
            required={true}
            rows={3}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Book title"
            multiline={true}
            name="fez_record_search_key_book_title.rek_book_title"
            required={true}
            rows={1}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Place of publication"
            name="fez_record_search_key_place_of_publication.rek_place_of_publication"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Publisher"
            name="fez_record_search_key_publisher.rek_publisher"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            allowPartial={true}
            className="requiredHintField"
            component={[Function]}
            disabled={false}
            floatingTitle="Date published"
            floatingTitleRequired={true}
            name="rek_date"
            partialDateFieldId="rek-date"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <p>
            For more information about identification of author/creator/designer, click
             
            <a
              href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836546"
              target="_blank"
            >
              here
            </a>
          </p>,
          "title": "Authors/Designers name",
        }
      }
      title="Authors"
    >
      <Field
        component={[Function]}
        contributorEditorId="authors"
        disabled={false}
        locale={
          Object {
            "errorMessage": "You can not add two authors with the same ID",
            "form": Object {
              "locale": Object {
                "addButton": "Add author",
                "descriptionStep1": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 1 of 2
                  </span>
                   
                  - Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "descriptionStep1NoStep2": <div>
                  Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedFieldId": "authors-name-as-published-field",
                "nameAsPublishedHint": "Type the name exactly as published",
                "nameAsPublishedLabel": "Authors's name as published",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 2 of 2
                  </span>
                   
                  - Please 
                  <b>
                    select your name
                  </b>
                   from the list below (if applicable).
                </div>,
                "identifierColumn": "UQ identifier / Organisation",
                "nameColumn": "Author's name as published",
                "organisationColumn": "Organisation",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "lockedTooltip": "You are not able to edit this row",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "selectHint": "Select this author ([name]) to assign it as you",
                "selectedHint": "This is you",
                "suffix": " listed author",
                "unselectedHint": "Select this to confirm [identifier] is you",
              },
            },
          }
        }
        name="authors"
        required={true}
        showContributorAssignment={true}
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Editors"
    >
      <Field
        component={[Function]}
        contributorEditorId="editors"
        disabled={false}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButton": "Add editor",
                "descriptionStep1": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 1 of 2
                  </span>
                   
                  - Please 
                  <b>
                    add to a list of editors below
                  </b>
                  , in the format "John Smith".
                </div>,
                "descriptionStep1NoStep2": <div>
                  Please 
                  <b>
                    add to a list of editors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedFieldId": "editors-name-as-published-field",
                "nameAsPublishedHint": "e.g. \\"John Smith\\"",
                "nameAsPublishedLabel": "Editor's name as published",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name (if applicable)",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 2 of 2
                  </span>
                   
                  - Please 
                  <b>
                    select your name
                  </b>
                   from the list below (if applicable).
                </div>,
                "identifierColumn": "UQ identifier / Organisation",
                "nameColumn": "Editor's name in the format eg. \\"John Smith\\"",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "selectHint": "Select this editor ([name]) to assign it as you",
                "selectedHint": "This is you",
                "suffix": " listed editor",
                "unselectedHint": "Select this to confirm this editor is you",
              },
            },
          }
        }
        name="editors"
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="ISBN"
    >
      <WithStyles(ForwardRef(Typography))>
        You can add up to five ISBN values
      </WithStyles(ForwardRef(Typography))>
      <Field
        component={[Function]}
        disabled={false}
        isValid={[Function]}
        listEditorId="isbn"
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButtonLabel": <span>
                  Add ISBN
                </span>,
                "editButtonLabel": <span>
                  Update ISBN
                </span>,
                "inputFieldHint": "Enter a 10 or 13 digit ISBN",
                "inputFieldLabel": "ISBN value",
                "remindToAddText": <span>
                  Please press 
                  <b>
                    ENTER
                  </b>
                   or click 
                  <b>
                    ADD
                  </b>
                   button to add this value to the list
                </span>,
              },
            },
            "header": Object {
              "locale": Object {
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "nameColumn": "ISBN",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
              },
            },
          }
        }
        maxCount={5}
        name="fez_record_search_key_isbn"
        remindToAdd={true}
        searchKey={
          Object {
            "order": "rek_isbn_order",
            "value": "rek_isbn",
          }
        }
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="ISSN"
    >
      <WithStyles(ForwardRef(Typography))>
        You can add up to five ISSN values
      </WithStyles(ForwardRef(Typography))>
      <Field
        component={[Function]}
        disabled={false}
        inputNormalizer={[Function]}
        isValid={[Function]}
        listEditorId="issn"
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButtonLabel": <span>
                  Add ISSN
                </span>,
                "editButtonLabel": <span>
                  Update ISSN
                </span>,
                "inputFieldHint": "Enter ISSN, e.g. 1838-9414",
                "inputFieldLabel": "ISSN value",
                "remindToAddText": <span>
                  Please press 
                  <b>
                    ENTER
                  </b>
                   or click 
                  <b>
                    ADD
                  </b>
                   button to add this value to the list
                </span>,
              },
            },
            "header": Object {
              "locale": Object {
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "nameColumn": "ISSN",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
              },
            },
          }
        }
        maxCount={5}
        name="fez_record_search_key_issn"
        remindToAdd={true}
        rowItemTemplate={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": Object {
              "$$typeof": Symbol(react.memo),
              "compare": [Function],
              "propTypes": Object {
                "actions": [Function],
                "hasPreload": [Function],
                "item": [Function],
              },
              "type": [Function],
            },
            "compare": null,
            "type": [Function],
          }
        }
        searchKey={
          Object {
            "order": "rek_issn_order",
            "value": "rek_issn",
          }
        }
        transformFunction={[Function]}
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Other work details"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Edition"
            name="fez_record_search_key_edition.rek_edition"
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            error={false}
            errorText=""
            fullWidth={true}
            label="Start page"
            name="fez_record_search_key_start_page.rek_start_page"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            error={false}
            errorText=""
            fullWidth={true}
            label="End page"
            name="fez_record_search_key_end_page.rek_end_page"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Notes (not publicly viewable)"
            multiline={true}
            name="comments"
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link (URL)"
            name="rek_link"
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;

exports[`BookChapterForm renders  shows an error when end page is less than start page 1`] = `
<WithStyles(ForwardRef(Grid))
  container={true}
  spacing={3}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Book chapter information"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            autoFocus={true}
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Book chapter title"
            multiline={true}
            name="rek_title"
            required={true}
            rows={3}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Book title"
            multiline={true}
            name="fez_record_search_key_book_title.rek_book_title"
            required={true}
            rows={1}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Place of publication"
            name="fez_record_search_key_place_of_publication.rek_place_of_publication"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Publisher"
            name="fez_record_search_key_publisher.rek_publisher"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            allowPartial={true}
            className="requiredHintField"
            component={[Function]}
            disabled={false}
            floatingTitle="Date published"
            floatingTitleRequired={true}
            name="rek_date"
            partialDateFieldId="rek-date"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <p>
            For more information about identification of author/creator/designer, click
             
            <a
              href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836546"
              target="_blank"
            >
              here
            </a>
          </p>,
          "title": "Authors/Designers name",
        }
      }
      title="Authors"
    >
      <Field
        component={[Function]}
        contributorEditorId="authors"
        disabled={false}
        locale={
          Object {
            "errorMessage": "You can not add two authors with the same ID",
            "form": Object {
              "locale": Object {
                "addButton": "Add author",
                "descriptionStep1": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 1 of 2
                  </span>
                   
                  - Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "descriptionStep1NoStep2": <div>
                  Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedFieldId": "authors-name-as-published-field",
                "nameAsPublishedHint": "Type the name exactly as published",
                "nameAsPublishedLabel": "Authors's name as published",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 2 of 2
                  </span>
                   
                  - Please 
                  <b>
                    select your name
                  </b>
                   from the list below (if applicable).
                </div>,
                "identifierColumn": "UQ identifier / Organisation",
                "nameColumn": "Author's name as published",
                "organisationColumn": "Organisation",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "lockedTooltip": "You are not able to edit this row",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "selectHint": "Select this author ([name]) to assign it as you",
                "selectedHint": "This is you",
                "suffix": " listed author",
                "unselectedHint": "Select this to confirm [identifier] is you",
              },
            },
          }
        }
        name="authors"
        required={true}
        showContributorAssignment={true}
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Editors"
    >
      <Field
        component={[Function]}
        contributorEditorId="editors"
        disabled={false}
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButton": "Add editor",
                "descriptionStep1": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 1 of 2
                  </span>
                   
                  - Please 
                  <b>
                    add to a list of editors below
                  </b>
                  , in the format "John Smith".
                </div>,
                "descriptionStep1NoStep2": <div>
                  Please 
                  <b>
                    add to a list of editors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedFieldId": "editors-name-as-published-field",
                "nameAsPublishedHint": "e.g. \\"John Smith\\"",
                "nameAsPublishedLabel": "Editor's name as published",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name (if applicable)",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 2 of 2
                  </span>
                   
                  - Please 
                  <b>
                    select your name
                  </b>
                   from the list below (if applicable).
                </div>,
                "identifierColumn": "UQ identifier / Organisation",
                "nameColumn": "Editor's name in the format eg. \\"John Smith\\"",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "selectHint": "Select this editor ([name]) to assign it as you",
                "selectedHint": "This is you",
                "suffix": " listed editor",
                "unselectedHint": "Select this to confirm this editor is you",
              },
            },
          }
        }
        name="editors"
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="ISBN"
    >
      <WithStyles(ForwardRef(Typography))>
        You can add up to five ISBN values
      </WithStyles(ForwardRef(Typography))>
      <Field
        component={[Function]}
        disabled={false}
        isValid={[Function]}
        listEditorId="isbn"
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButtonLabel": <span>
                  Add ISBN
                </span>,
                "editButtonLabel": <span>
                  Update ISBN
                </span>,
                "inputFieldHint": "Enter a 10 or 13 digit ISBN",
                "inputFieldLabel": "ISBN value",
                "remindToAddText": <span>
                  Please press 
                  <b>
                    ENTER
                  </b>
                   or click 
                  <b>
                    ADD
                  </b>
                   button to add this value to the list
                </span>,
              },
            },
            "header": Object {
              "locale": Object {
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "nameColumn": "ISBN",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
              },
            },
          }
        }
        maxCount={5}
        name="fez_record_search_key_isbn"
        remindToAdd={true}
        searchKey={
          Object {
            "order": "rek_isbn_order",
            "value": "rek_isbn",
          }
        }
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="ISSN"
    >
      <WithStyles(ForwardRef(Typography))>
        You can add up to five ISSN values
      </WithStyles(ForwardRef(Typography))>
      <Field
        component={[Function]}
        disabled={false}
        inputNormalizer={[Function]}
        isValid={[Function]}
        listEditorId="issn"
        locale={
          Object {
            "form": Object {
              "locale": Object {
                "addButtonLabel": <span>
                  Add ISSN
                </span>,
                "editButtonLabel": <span>
                  Update ISSN
                </span>,
                "inputFieldHint": "Enter ISSN, e.g. 1838-9414",
                "inputFieldLabel": "ISSN value",
                "remindToAddText": <span>
                  Please press 
                  <b>
                    ENTER
                  </b>
                   or click 
                  <b>
                    ADD
                  </b>
                   button to add this value to the list
                </span>,
              },
            },
            "header": Object {
              "locale": Object {
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "nameColumn": "ISSN",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
              },
            },
          }
        }
        maxCount={5}
        name="fez_record_search_key_issn"
        remindToAdd={true}
        rowItemTemplate={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": Object {
              "$$typeof": Symbol(react.memo),
              "compare": [Function],
              "propTypes": Object {
                "actions": [Function],
                "hasPreload": [Function],
                "item": [Function],
              },
              "type": [Function],
            },
            "compare": null,
            "type": [Function],
          }
        }
        searchKey={
          Object {
            "order": "rek_issn_order",
            "value": "rek_issn",
          }
        }
        transformFunction={[Function]}
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Other work details"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Edition"
            name="fez_record_search_key_edition.rek_edition"
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            error={true}
            errorText="Page range invalid"
            fullWidth={true}
            label="Start page"
            name="fez_record_search_key_start_page.rek_start_page"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            error={true}
            errorText="Page range invalid"
            fullWidth={true}
            label="End page"
            name="fez_record_search_key_end_page.rek_end_page"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Notes (not publicly viewable)"
            multiline={true}
            name="comments"
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link (URL)"
            name="rek_link"
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;
