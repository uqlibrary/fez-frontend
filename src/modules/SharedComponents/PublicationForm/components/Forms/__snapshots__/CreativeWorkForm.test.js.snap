// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreativeWorkForm renders  component 1`] = `
<WithStyles(ForwardRef(Grid))
  container={true}
  spacing={3}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Creative work information"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            autoFocus={true}
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Title"
            multiline={true}
            name="rek_title"
            placeholder="Title of creative work"
            required={true}
            rows={3}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Place of publication"
            name="fez_record_search_key_place_of_publication.rek_place_of_publication"
            placeholder="Enter place of publication, location or venue"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Publisher"
            name="fez_record_search_key_publisher.rek_publisher"
            placeholder="Enter the name of the publisher or producer"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="DOI"
            name="fez_record_search_key_doi.rek_doi"
            placeholder="Enter a valid DOI (e.g. 10.123/456)"
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            allowPartial={true}
            className="requiredHintField"
            component={[Function]}
            disabled={false}
            floatingTitle="Publication/Start date"
            floatingTitleRequired={true}
            hasError=""
            name="rek_date"
            partialDateFieldId="rek-date"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <p>
            For more information about identification of author/creator/designer, click
             
            <a
              href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836546"
              target="_blank"
            >
              here
            </a>
          </p>,
          "title": "Authors/Designers name",
        }
      }
      title="Authors"
    >
      <WithStyles(ForwardRef(Typography))>
        Please provide a list of authors and then select your name from the list.
      </WithStyles(ForwardRef(Typography))>
      <Field
        component={[Function]}
        contributorEditorId="authors"
        disabled={false}
        locale={
          Object {
            "errorMessage": "You can not add two authors with the same ID",
            "form": Object {
              "locale": Object {
                "addButton": "Add author",
                "descriptionStep1": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 1 of 2
                  </span>
                   
                  - Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "descriptionStep1NoStep2": <div>
                  Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedFieldId": "authors-name-as-published-field",
                "nameAsPublishedHint": "Type the name exactly as published",
                "nameAsPublishedLabel": "Authors's name as published",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 2 of 2
                  </span>
                   
                  - Please 
                  <b>
                    select your name
                  </b>
                   from the list below (if applicable).
                </div>,
                "identifierColumn": "UQ identifier / Organisation",
                "nameColumn": "Author's name as published",
                "organisationColumn": "Organisation",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "lockedTooltip": "You are not able to edit this row",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "selectHint": "Select this author ([name]) to assign it as you",
                "selectedHint": "This is you",
                "suffix": " listed author",
                "unselectedHint": "Select this to confirm [identifier] is you",
              },
            },
          }
        }
        name="authors"
        required={true}
        showContributorAssignment={true}
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Optional information"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Notes (not publicly viewable)"
            multiline={true}
            name="comments"
            placeholder="Add any additional information here."
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link"
            name="rek_link"
            placeholder="Enter a valid URL to the work"
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link description"
            name="rek_link_description"
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;

exports[`CreativeWorkForm renders  should show content for a random (other) NTRO type correctly (base case) 1`] = `
<WithStyles(ForwardRef(Grid))
  container={true}
  spacing={3}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Creative work information"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            autoFocus={false}
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Title"
            multiline={true}
            name="rek_title"
            placeholder="Title of creative work"
            required={true}
            rows={3}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Place of publication"
            name="fez_record_search_key_place_of_publication.rek_place_of_publication"
            placeholder="Enter place of publication, location or venue"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Publisher"
            name="fez_record_search_key_publisher.rek_publisher"
            placeholder="Enter the name of the publisher or producer"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={4}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="DOI"
            name="fez_record_search_key_doi.rek_doi"
            placeholder="Enter a valid DOI (e.g. 10.123/456)"
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            allowPartial={true}
            className="requiredHintField"
            component={[Function]}
            disabled={false}
            floatingTitle="Publication/Start date"
            floatingTitleRequired={true}
            hasError=""
            name="rek_date"
            partialDateFieldId="rek-date"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            allowPartial={true}
            component={[Function]}
            disabled={false}
            floatingTitle="End date"
            hasError=""
            name="fez_record_search_key_end_date.rek_end_date"
            partialDateFieldId="rek-end-date"
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <p>
            For more information about identification of author/creator/designer, click
             
            <a
              href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836546"
              target="_blank"
            >
              here
            </a>
          </p>,
          "title": "Authors/Designers name",
        }
      }
      title="Authors"
    >
      <WithStyles(ForwardRef(Typography))>
        Please provide a list of authors and then select your name from the list.
      </WithStyles(ForwardRef(Typography))>
      <Field
        component={[Function]}
        contributorEditorId="authors"
        disabled={false}
        isNtro={true}
        locale={
          Object {
            "errorMessage": "You can not add two authors with the same ID",
            "form": Object {
              "locale": Object {
                "addButton": "Add author",
                "descriptionStep1": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 1 of 2
                  </span>
                   
                  - Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "descriptionStep1NoStep2": <div>
                  Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedFieldId": "authors-name-as-published-field",
                "nameAsPublishedHint": "Type the name exactly as published",
                "nameAsPublishedLabel": "Authors's name as published",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 2 of 2
                  </span>
                   
                  - Please 
                  <b>
                    select your name
                  </b>
                   from the list below (if applicable).
                </div>,
                "identifierColumn": "UQ identifier / Organisation",
                "nameColumn": "Author's name as published",
                "organisationColumn": "Organisation",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "lockedTooltip": "You are not able to edit this row",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "selectHint": "Select this author ([name]) to assign it as you",
                "selectedHint": "This is you",
                "suffix": " listed author",
                "unselectedHint": "Select this to confirm [identifier] is you",
              },
            },
          }
        }
        name="authors"
        required={true}
        showContributorAssignment={true}
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <NtroFields
    disableDeleteAllGrants={false}
    hideAbstract={false}
    hideAudienceSize={false}
    hideEndPage={true}
    hideExtent={false}
    hideGrants={false}
    hideIsmn={true}
    hideIsrc={true}
    hideIssue={true}
    hideLanguage={false}
    hideOriginalFormat={false}
    hidePeerReviewActivity={false}
    hideSeries={false}
    hideStartPage={true}
    hideVolume={true}
    locale={
      Object {
        "contributionStatement": Object {
          "fields": Object {
            "impactStatement": Object {
              "label": <span>
                Creator research statement*. Include Background, Contribution and Significance
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                   (not for public view)
                </span>
              </span>,
              "placeholder": "Remember to include substantiation of your major or minor scale/significance claim above.",
            },
            "scaleOfWork": Object {
              "description": <span>
                Select the option that best describes the significance of the work*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                   (not for public view)
                </span>
              </span>,
              "label": "Scale/Significance of work",
            },
          },
          "help": Object {
            "buttonLabel": "CLOSE",
            "text": <React.Fragment>
              <WithStyles(ForwardRef(Typography))
                component="h4"
                variant="h6"
              >
                Creator research statement
              </WithStyles(ForwardRef(Typography))>
              <p>
                For more information about the research statement, click
                 
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836548"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </p>
            </React.Fragment>,
            "title": "Author/Creator research statement",
          },
          "title": "Author/Creator research statement",
        },
        "grantEditor": Object {
          "title": "Grant details",
        },
        "metadata": Object {
          "fields": Object {
            "abstract": Object {
              "label": <span>
                Abstract/Description* 
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (for public view)
                </span>
              </span>,
              "placeholder": "Enter a brief description of the work",
            },
            "audienceSize": Object {
              "label": "Audience size",
            },
            "endPage": Object {
              "label": "End page",
            },
            "extent": Object {
              "label": "Total pages/Extent",
              "placeholder": "Total pages, size, or duration",
            },
            "issue": Object {
              "label": "Issue",
            },
            "language": Object {
              "label": "Language",
              "selectPrompt": "Please select languages as required",
            },
            "notes": Object {
              "label": "Notes",
            },
            "peerReviewActivity": Object {
              "label": "Quality indicators",
            },
            "physicalDescription": Object {
              "label": "Physical description",
              "placeholder": "e.g Building, Exhibit, Performance",
            },
            "series": Object {
              "floatingLabelText": "Series",
              "hintText": "Enter the name of publication, performance, recording, or event series",
            },
            "startPage": Object {
              "label": "Start page",
            },
            "volume": Object {
              "label": "Volume",
            },
          },
          "title": "NTRO data",
        },
      }
    }
    showContributionStatement={false}
    showSignificance={false}
    submitting={false}
  />
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Optional information"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Notes (not publicly viewable)"
            multiline={true}
            name="comments"
            placeholder="Add any additional information here."
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link"
            name="rek_link"
            placeholder="Enter a valid URL to the work"
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link description"
            name="rek_link_description"
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;

exports[`CreativeWorkForm renders  should show exhibition content correctly 1`] = `
<WithStyles(ForwardRef(Grid))
  container={true}
  spacing={3}
>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Creative work information"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            autoFocus={false}
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Title"
            multiline={true}
            name="rek_title"
            placeholder="Title of creative work"
            required={true}
            rows={3}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Place of publication"
            name="fez_record_search_key_place_of_publication.rek_place_of_publication"
            placeholder="Enter place of publication, location or venue"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Publisher"
            name="fez_record_search_key_publisher.rek_publisher"
            placeholder="Enter the name of the publisher or producer"
            required={true}
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            allowPartial={true}
            className="requiredHintField"
            component={[Function]}
            disabled={false}
            floatingTitle="Publication/Start date"
            floatingTitleRequired={true}
            hasError=""
            name="rek_date"
            partialDateFieldId="rek-date"
            required={true}
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          sm={6}
          xs={12}
        >
          <Field
            allowPartial={true}
            component={[Function]}
            disabled={false}
            floatingTitle="End date"
            hasError=""
            name="fez_record_search_key_end_date.rek_end_date"
            partialDateFieldId="rek-end-date"
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      help={
        Object {
          "buttonLabel": "CLOSE",
          "text": <p>
            For more information about identification of author/creator/designer, click
             
            <a
              href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836546"
              target="_blank"
            >
              here
            </a>
          </p>,
          "title": "Authors/Designers name",
        }
      }
      title="Authors"
    >
      <WithStyles(ForwardRef(Typography))>
        Please provide a list of authors and then select your name from the list.
      </WithStyles(ForwardRef(Typography))>
      <Field
        component={[Function]}
        contributorEditorId="authors"
        disabled={false}
        isNtro={true}
        locale={
          Object {
            "errorMessage": "You can not add two authors with the same ID",
            "form": Object {
              "locale": Object {
                "addButton": "Add author",
                "descriptionStep1": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 1 of 2
                  </span>
                   
                  - Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "descriptionStep1NoStep2": <div>
                  Please 
                  <b>
                    add to a list of authors below
                  </b>
                  , in the format and order that they are published.
                </div>,
                "identifierLabel": "UQ identifier (if available)",
                "nameAsPublishedFieldId": "authors-name-as-published-field",
                "nameAsPublishedHint": "Type the name exactly as published",
                "nameAsPublishedLabel": "Authors's name as published",
              },
            },
            "header": Object {
              "locale": Object {
                "contributorAssignmentColumn": "Select your name",
                "deleteAll": "Remove all items",
                "deleteAllConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete all items?",
                  "confirmationTitle": "Delete all",
                },
                "descriptionStep2": <div>
                  <span
                    className="authorSteps"
                  >
                    Step 2 of 2
                  </span>
                   
                  - Please 
                  <b>
                    select your name
                  </b>
                   from the list below (if applicable).
                </div>,
                "identifierColumn": "UQ identifier / Organisation",
                "nameColumn": "Author's name as published",
                "organisationColumn": "Organisation",
                "reorderColumn": "Reorder items",
              },
            },
            "row": Object {
              "locale": Object {
                "deleteHint": "Remove this item",
                "deleteRecordConfirmation": Object {
                  "cancelButtonLabel": "No",
                  "confirmButtonLabel": "Yes",
                  "confirmationMessage": "Are you sure you want to delete this item?",
                  "confirmationTitle": "Delete item",
                },
                "editHint": "Edit this item",
                "lockedTooltip": "You are not able to edit this row",
                "moveDownHint": "Move item down the order",
                "moveUpHint": "Move item up the order",
                "selectHint": "Select this author ([name]) to assign it as you",
                "selectedHint": "This is you",
                "suffix": " listed author",
                "unselectedHint": "Select this to confirm [identifier] is you",
              },
            },
          }
        }
        name="authors"
        required={true}
        showContributorAssignment={true}
        validate={
          Array [
            [Function],
          ]
        }
      />
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
  <NtroFields
    disableDeleteAllGrants={false}
    hideAbstract={false}
    hideAudienceSize={false}
    hideEndPage={true}
    hideExtent={false}
    hideGrants={false}
    hideIsmn={true}
    hideIsrc={true}
    hideIssue={true}
    hideLanguage={false}
    hideOriginalFormat={true}
    hidePeerReviewActivity={false}
    hideSeries={false}
    hideStartPage={true}
    hideVolume={true}
    locale={
      Object {
        "contributionStatement": Object {
          "fields": Object {
            "impactStatement": Object {
              "label": <span>
                Creator research statement*. Include Background, Contribution and Significance
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                   (not for public view)
                </span>
              </span>,
              "placeholder": "Remember to include substantiation of your major or minor scale/significance claim above.",
            },
            "scaleOfWork": Object {
              "description": <span>
                Select the option that best describes the significance of the work*
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                   (not for public view)
                </span>
              </span>,
              "label": "Scale/Significance of work",
            },
          },
          "help": Object {
            "buttonLabel": "CLOSE",
            "text": <React.Fragment>
              <WithStyles(ForwardRef(Typography))
                component="h4"
                variant="h6"
              >
                Creator research statement
              </WithStyles(ForwardRef(Typography))>
              <p>
                For more information about the research statement, click
                 
                <a
                  href="https://guides.library.uq.edu.au/for-researchers/uqespace-publications-datasets/ntro-submission-requirements#s-lg-box-20836548"
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                  target="_blank"
                >
                  here
                </a>
              </p>
            </React.Fragment>,
            "title": "Author/Creator research statement",
          },
          "title": "Author/Creator research statement",
        },
        "grantEditor": Object {
          "title": "Grant details",
        },
        "metadata": Object {
          "fields": Object {
            "abstract": Object {
              "label": <span>
                Abstract/Description* 
                <span
                  style={
                    Object {
                      "fontWeight": 700,
                    }
                  }
                >
                  (for public view)
                </span>
              </span>,
              "placeholder": "Enter a brief description of the work",
            },
            "audienceSize": Object {
              "label": "Audience size",
            },
            "endPage": Object {
              "label": "End page",
            },
            "extent": Object {
              "label": "Total pages/Extent",
              "placeholder": "Total pages, size, or duration",
            },
            "issue": Object {
              "label": "Issue",
            },
            "language": Object {
              "label": "Language",
              "selectPrompt": "Please select languages as required",
            },
            "notes": Object {
              "label": "Notes",
            },
            "peerReviewActivity": Object {
              "label": "Quality indicators",
            },
            "physicalDescription": Object {
              "label": "Physical description",
              "placeholder": "e.g Building, Exhibit, Performance",
            },
            "series": Object {
              "floatingLabelText": "Series",
              "hintText": "Enter the name of publication, performance, recording, or event series",
            },
            "startPage": Object {
              "label": "Start page",
            },
            "volume": Object {
              "label": "Volume",
            },
          },
          "title": "NTRO data",
        },
      }
    }
    showContributionStatement={false}
    showSignificance={false}
    submitting={false}
  />
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={12}
  >
    <StandardCard
      title="Optional information"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
        spacing={2}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Notes (not publicly viewable)"
            multiline={true}
            name="comments"
            placeholder="Add any additional information here."
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link"
            name="rek_link"
            placeholder="Enter a valid URL to the work"
            type="text"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={12}
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "classes": [Function],
                  "help": [Function],
                  "innerRef": [Function],
                  "textFieldId": [Function],
                },
                "render": [Function],
              }
            }
            disabled={false}
            fullWidth={true}
            label="Link description"
            name="rek_link_description"
            type="text"
          />
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </StandardCard>
  </WithStyles(ForwardRef(Grid))>
</WithStyles(ForwardRef(Grid))>
`;
