// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScaleOfSignificanceListEditor tests Should render a list of many items in a scrollable HTML div 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="one-0"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="two-1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 2,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="three-2"
      listRowId="test-list-editor-list-row-2"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={3}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 3,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="four-3"
      listRowId="test-list-editor-list-row-3"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={4}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 4,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="five-4"
      listRowId="test-list-editor-list-row-4"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={5}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 5,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="six-5"
      listRowId="test-list-editor-list-row-5"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={6}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 6,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="seven-6"
      listRowId="test-list-editor-list-row-6"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={7}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 7,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="eight-7"
      listRowId="test-list-editor-list-row-7"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={8}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 8,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="nine-8"
      listRowId="test-list-editor-list-row-8"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={9}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 9,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="ten-9"
      listRowId="test-list-editor-list-row-9"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests Should render a list of many items inline 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="one-0"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="two-1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 2,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="three-2"
      listRowId="test-list-editor-list-row-2"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={3}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 3,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="four-3"
      listRowId="test-list-editor-list-row-3"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={4}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 4,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="five-4"
      listRowId="test-list-editor-list-row-4"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={5}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 5,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="six-5"
      listRowId="test-list-editor-list-row-5"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={6}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 6,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="seven-6"
      listRowId="test-list-editor-list-row-6"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={7}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 7,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="eight-7"
      listRowId="test-list-editor-list-row-7"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={8}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 8,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="nine-8"
      listRowId="test-list-editor-list-row-8"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={9}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 9,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="ten-9"
      listRowId="test-list-editor-list-row-9"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests Should render a list of many items inline 2`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="one-0"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="two-1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 2,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="three-2"
      listRowId="test-list-editor-list-row-2"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={3}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 3,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="four-3"
      listRowId="test-list-editor-list-row-3"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={4}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 4,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="five-4"
      listRowId="test-list-editor-list-row-4"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={5}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 5,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="six-5"
      listRowId="test-list-editor-list-row-5"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={6}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 6,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="seven-6"
      listRowId="test-list-editor-list-row-6"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={7}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 7,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="eight-7"
      listRowId="test-list-editor-list-row-7"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={8}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 8,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="nine-8"
      listRowId="test-list-editor-list-row-8"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={9}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 9,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="ten-9"
      listRowId="test-list-editor-list-row-9"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should add an object item and set state 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={true}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <ForwardRef(Typography)
      style={
        Object {
          "borderBottom": "1px solid rgba(224, 224, 224, 1)",
          "fontSize": "0.875rem",
          "padding": 16,
          "textAlign": "center",
        }
      }
    >
      No records to display
    </ForwardRef(Typography)>
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should add an object item and set state 2`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={true}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="test"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should add item and set state 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={true}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <ForwardRef(Typography)
      style={
        Object {
          "borderBottom": "1px solid rgba(224, 224, 224, 1)",
          "fontSize": "0.875rem",
          "padding": 16,
          "textAlign": "center",
        }
      }
    >
      No records to display
    </ForwardRef(Typography)>
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should add item and set state 2`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={true}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": "test",
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="test"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should move down an item 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="one-0"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="three-1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 2,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="two-2"
      listRowId="test-list-editor-list-row-2"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should move up an item 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="two-0"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="one-1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 2,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="three-2"
      listRowId="test-list-editor-list-row-2"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should process incomplete props without error 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={true}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <ForwardRef(Typography)
      style={
        Object {
          "borderBottom": "1px solid rgba(224, 224, 224, 1)",
          "fontSize": "0.875rem",
          "padding": 16,
          "textAlign": "center",
        }
      }
    >
      No records to display
    </ForwardRef(Typography)>
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should render full component as disabled 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={true}
    hideReorder={true}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <ForwardRef(Typography)
      style={
        Object {
          "borderBottom": "1px solid rgba(224, 224, 224, 1)",
          "fontSize": "0.875rem",
          "padding": 16,
          "textAlign": "center",
        }
      }
    >
      No records to display
    </ForwardRef(Typography)>
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should render full component with a defined className 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={true}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <ForwardRef(Typography)
      style={
        Object {
          "borderBottom": "1px solid rgba(224, 224, 224, 1)",
          "fontSize": "0.875rem",
          "padding": 16,
          "textAlign": "center",
        }
      }
    >
      No records to display
    </ForwardRef(Typography)>
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should render input value as itemList 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="test 1-0"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="test 2-1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should render input value as itemList for List 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="test 1-0"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="test 2-1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should update an entry with selected index 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": "test 1",
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="test 1"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": "new 1",
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="new 1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;

exports[`ScaleOfSignificanceListEditor tests should update an item with selected index 1`] = `
<div
  id="test-list-editor-list-editor"
>
  <ForwardRef(Box)
    alignItems="flex-end"
    display="flex"
    justifyContent="flex-end"
  >
    <ForwardRef(IconButton)
      data-analyticsid="rek-significance-showhidebutton"
      data-testid="rek-significance-showhidebutton"
      onClick={[Function]}
      size="small"
      style={
        Object {
          "backgroundColor": "#51247A",
          "color": "#fff",
        }
      }
    >
      <Memo(ForwardRef(AddIcon)) />
    </ForwardRef(IconButton)>
  </ForwardRef(Box)>
  <Memo(ListRowHeader)
    disabled={false}
    hideReorder={false}
    listEditorId="test-list-editor"
    onDeleteAll={[Function]}
  />
  <div
    data-testid="test-list-editor-list"
    id="test-list-editor-list"
  >
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={false}
      disabled={false}
      hideReorder={false}
      index={0}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 0,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="one-0"
      listRowId="test-list-editor-list-row-0"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={true}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={1}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 1,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="four-1"
      listRowId="test-list-editor-list-row-1"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
    <Memo(ListRow)
      canEdit={false}
      canMoveDown={false}
      canMoveUp={true}
      disabled={false}
      hideReorder={false}
      index={2}
      item={
        Object {
          "author": Object {
            "rek_author": null,
          },
          "id": 2,
          "key": undefined,
          "value": Object {
            "htmlText": null,
          },
        }
      }
      itemTemplate={[Function]}
      key="three-2"
      listRowId="test-list-editor-list-row-2"
      onDelete={[Function]}
      onEdit={[Function]}
      onMoveDown={[Function]}
      onMoveUp={[Function]}
    />
  </div>
</div>
`;
