// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavigationDialogBox component should not render 1`] = `<span />`;

exports[`NavigationDialogBox component should render 1`] = `
<NavigationDialogBox
  txt={
    Object {
      "cancelButtonLabel": "No",
      "confirmButtonLabel": "Yes",
      "confirmationMessage": "Are you sure?",
      "confirmationTitle": "Confirmation",
    }
  }
  when={true}
>
  <withRouter(NavigationPrompt)
    when={true}
  >
    <NavigationPrompt
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      location={
        Object {
          "hash": "",
          "key": "testKey",
          "pathname": "/",
          "search": "",
        }
      }
      match={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      when={true}
    >
      <div>
        <WithStyles(ConfirmDialogBox)
          locale={
            Object {
              "cancelButtonLabel": "No",
              "confirmButtonLabel": "Yes",
              "confirmationMessage": "Are you sure?",
              "confirmationTitle": "Confirmation",
            }
          }
          onAction={[Function]}
          onCancelAction={[Function]}
          onRef={[Function]}
        >
          <ConfirmDialogBox
            classes={
              Object {
                "alternateActionButtonClass": "ConfirmDialogBox-alternateActionButtonClass-1",
              }
            }
            confirmDialogBoxId="dialog-box"
            hideCancelButton={false}
            locale={
              Object {
                "cancelButtonLabel": "No",
                "confirmButtonLabel": "Yes",
                "confirmationMessage": "Are you sure?",
                "confirmationTitle": "Confirmation",
              }
            }
            onAction={[Function]}
            onCancelAction={[Function]}
            onRef={[Function]}
            showAlternateActionButton={false}
          >
            <ForwardRef(Dialog)
              open={false}
              style={
                Object {
                  "padding": 6,
                }
              }
            >
              <MuiDialogRoot
                className="MuiDialog-root"
                closeAfterTransition={true}
                components={
                  Object {
                    "Backdrop": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "__emotion_base": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "TransitionComponent": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "component": [Function],
                          "components": [Function],
                          "componentsProps": [Function],
                          "invisible": [Function],
                          "open": [Function],
                          "slotProps": [Function],
                          "slots": [Function],
                          "sx": [Function],
                          "transitionDuration": [Function],
                        },
                        "render": [Function],
                      },
                      "__emotion_forwardProp": [Function],
                      "__emotion_real": [Circular],
                      "__emotion_styles": Array [
                        "label:MuiDialog-backdrop;",
                        Object {
                          "zIndex": -1,
                        },
                        [Function],
                      ],
                      "defaultProps": undefined,
                      "render": [Function],
                      "withComponent": [Function],
                    },
                  }
                }
                componentsProps={
                  Object {
                    "backdrop": Object {
                      "as": undefined,
                      "transitionDuration": Object {
                        "enter": 225,
                        "exit": 195,
                      },
                    },
                  }
                }
                disableEscapeKeyDown={false}
                onClick={[Function]}
                open={false}
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(DialogTitle)
                        data-testid="message-title"
                      >
                        Confirmation
                      </ForwardRef(DialogTitle)>,
                      <ForwardRef(DialogContent)>
                        <ForwardRef(DialogContentText)
                          data-testid="message-content"
                        >
                          Are you sure?
                        </ForwardRef(DialogContentText)>
                      </ForwardRef(DialogContent)>,
                      <ForwardRef(DialogActions)>
                        <ForwardRef(Grid)
                          container={true}
                          spacing={1}
                        >
                          <ForwardRef(Grid)
                            item={true}
                            sx={
                              Object {
                                "display": Object {
                                  "sm": "block",
                                  "xs": "none",
                                },
                              }
                            }
                            xs={true}
                          />
                          <ForwardRef(Grid)
                            item={true}
                            sm="auto"
                            xs={12}
                          >
                            <ForwardRef(Button)
                              autoFocus={true}
                              color="primary"
                              data-analyticsid="confirm-dialog-box"
                              data-testid="confirm-dialog-box"
                              fullWidth={true}
                              onClick={[Function]}
                            >
                              Yes
                            </ForwardRef(Button)>
                          </ForwardRef(Grid)>
                          <ForwardRef(Grid)
                            item={true}
                            sm="auto"
                            xs={12}
                          >
                            <ForwardRef(Button)
                              color="primary"
                              data-analyticsid="cancel-dialog-box"
                              data-testid="cancel-dialog-box"
                              fullWidth={true}
                              onClick={[Function]}
                              variant="contained"
                            >
                              No
                            </ForwardRef(Button)>
                          </ForwardRef(Grid)>
                        </ForwardRef(Grid)>
                      </ForwardRef(DialogActions)>,
                    ],
                    "disableEscapeKeyDown": false,
                    "fullScreen": false,
                    "fullWidth": false,
                    "maxWidth": "sm",
                    "open": false,
                    "scroll": "paper",
                    "style": Object {
                      "padding": 6,
                    },
                  }
                }
                style={
                  Object {
                    "padding": 6,
                  }
                }
              >
                <Insertion
                  cache={
                    Object {
                      "insert": [Function],
                      "inserted": Object {
                        "1h8td7x-MuiDialog-root": true,
                      },
                      "key": "css",
                      "nonce": undefined,
                      "registered": Object {
                        "css-1h8td7x-MuiDialog-root": "label:MuiDialog-root;@media print{position:absolute !important;}",
                      },
                      "sheet": StyleSheet {
                        "_alreadyInsertedOrderInsensitiveRule": true,
                        "_insertTag": [Function],
                        "before": null,
                        "container": <head>
                          <style
                            data-emotion="css"
                            data-s=""
                          >
                            
                            .css-1h8td7x-MuiDialog-root{}
                          </style>
                          <style
                            data-emotion="css"
                            data-s=""
                          >
                            
                            @media print{.css-1h8td7x-MuiDialog-root{position:absolute!important;}}
                          </style>
                          <style
                            data-jss=""
                            data-meta="ConfirmDialogBox"
                          >
                            
.ConfirmDialogBox-alternateActionButtonClass-1 {
  color: #FFFFFF;
  background-color: #bf5000;
}
.ConfirmDialogBox-alternateActionButtonClass-1:hover {
  background-color: #542400;
}

                          </style>
                        </head>,
                        "ctr": 2,
                        "insertionPoint": undefined,
                        "isSpeedy": false,
                        "key": "css",
                        "nonce": undefined,
                        "prepend": true,
                        "tags": Array [
                          <style
                            data-emotion="css"
                            data-s=""
                          >
                            
                            .css-1h8td7x-MuiDialog-root{}
                          </style>,
                          <style
                            data-emotion="css"
                            data-s=""
                          >
                            
                            @media print{.css-1h8td7x-MuiDialog-root{position:absolute!important;}}
                          </style>,
                        ],
                      },
                    }
                  }
                  isStringTag={false}
                  serialized={
                    Object {
                      "map": undefined,
                      "name": "1h8td7x-MuiDialog-root",
                      "next": undefined,
                      "styles": "label:MuiDialog-root;@media print{position:absolute !important;}",
                      "toString": [Function],
                    }
                  }
                />
                <ForwardRef(Modal)
                  className="MuiDialog-root css-1h8td7x-MuiDialog-root"
                  closeAfterTransition={true}
                  components={
                    Object {
                      "Backdrop": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "__emotion_base": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "TransitionComponent": [Function],
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "component": [Function],
                            "components": [Function],
                            "componentsProps": [Function],
                            "invisible": [Function],
                            "open": [Function],
                            "slotProps": [Function],
                            "slots": [Function],
                            "sx": [Function],
                            "transitionDuration": [Function],
                          },
                          "render": [Function],
                        },
                        "__emotion_forwardProp": [Function],
                        "__emotion_real": [Circular],
                        "__emotion_styles": Array [
                          "label:MuiDialog-backdrop;",
                          Object {
                            "zIndex": -1,
                          },
                          [Function],
                        ],
                        "defaultProps": undefined,
                        "render": [Function],
                        "withComponent": [Function],
                      },
                    }
                  }
                  componentsProps={
                    Object {
                      "backdrop": Object {
                        "as": undefined,
                        "transitionDuration": Object {
                          "enter": 225,
                          "exit": 195,
                        },
                      },
                    }
                  }
                  disableEscapeKeyDown={false}
                  onClick={[Function]}
                  open={false}
                  style={
                    Object {
                      "padding": 6,
                    }
                  }
                >
                  <ForwardRef(ModalUnstyled)
                    className="MuiDialog-root css-1h8td7x-MuiDialog-root"
                    closeAfterTransition={true}
                    disableAutoFocus={false}
                    disableEnforceFocus={false}
                    disableEscapeKeyDown={false}
                    disablePortal={false}
                    disableRestoreFocus={false}
                    disableScrollLock={false}
                    hideBackdrop={false}
                    keepMounted={false}
                    onClick={[Function]}
                    onTransitionEnter={[Function]}
                    onTransitionExited={[Function]}
                    open={false}
                    slotProps={
                      Object {
                        "backdrop": [Function],
                        "root": [Function],
                      }
                    }
                    slots={
                      Object {
                        "backdrop": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "TransitionComponent": [Function],
                              "children": [Function],
                              "className": [Function],
                              "classes": [Function],
                              "component": [Function],
                              "components": [Function],
                              "componentsProps": [Function],
                              "invisible": [Function],
                              "open": [Function],
                              "slotProps": [Function],
                              "slots": [Function],
                              "sx": [Function],
                              "transitionDuration": [Function],
                            },
                            "render": [Function],
                          },
                          "__emotion_forwardProp": [Function],
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            "label:MuiDialog-backdrop;",
                            Object {
                              "zIndex": -1,
                            },
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "render": [Function],
                          "withComponent": [Function],
                        },
                        "root": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "__emotion_base": "div",
                          "__emotion_forwardProp": [Function],
                          "__emotion_real": [Circular],
                          "__emotion_styles": Array [
                            "label:MuiModal-root;",
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "defaultProps": undefined,
                          "render": [Function],
                          "withComponent": [Function],
                        },
                      }
                    }
                    style={
                      Object {
                        "padding": 6,
                      }
                    }
                  />
                </ForwardRef(Modal)>
              </MuiDialogRoot>
            </ForwardRef(Dialog)>
          </ConfirmDialogBox>
        </WithStyles(ConfirmDialogBox)>
      </div>
    </NavigationPrompt>
  </withRouter(NavigationPrompt)>
</NavigationDialogBox>
`;
